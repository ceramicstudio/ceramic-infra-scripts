---
- name: Add contrib repository
  ansible.builtin.apt_repository:
    repo: deb https://deb.debian.org/debian {{ ansible_distribution_release }} contrib
    state: present

- name: Update apt cache
  apt:
    update_cache: yes

- name: Install Linux headers
  apt:
    name:
      - "linux-headers-{{ ansible_kernel }}"
    state: present

- name: Install ZFS tools
  apt:
    name:
      - zfsutils-linux
    state: present

- name: Check if ZFS is correctly installed
  command: modprobe zfs
  register: zfs_module
  ignore_errors: no
  changed_when: false

- name: Check if ZFS pools exist
  command: zpool list {{ item.name }}
  loop: "{{ zfs_pools }}"
  register: zpool_exists
  ignore_errors: yes
  changed_when: false
  when: zfs_module.rc == 0

- name: Create ZFS pools
  command: zpool create {{ item.item.name }} {{ item.item.devices | join(' ') }}
  loop: "{{ zpool_exists.results }}"
  when: item.rc != 0 and item is failed

- name: Create ZFS filesystems
  zfs:
    name: "{{ item.name }}/data-store"
    state: present
  loop: "{{ zfs_pools }}"

- name: Check current mountpoints
  command: zfs get -H -o value mountpoint {{ item.name }}/data-store
  loop: "{{ zfs_pools }}"
  register: current_mountpoints
  changed_when: false
  failed_when: false

- name: Set mountpoints for filesystems
  command: zfs set mountpoint={{ item.item.mount_path }} {{ item.item.name }}/data-store
  loop: "{{ current_mountpoints.results }}"
  when:
    - item.rc == 0
    - item.stdout != data_store_mount_path
  register: set_mountpoint_results
  failed_when:
    - item.rc != 0
    - "'pool or dataset is busy' not in item.stderr"

- name: Set ZFS properties
  zfs:
    name: "{{ item.name }}/data-store"
    state: present
    extra_zfs_properties:
      compression: lz4
      atime: off
  loop: "{{ zfs_pools }}"

- name: Ensure store directories exist
  file:
    path: "{{ data_store_mount_path }}"
    state: directory
    owner: ceramic
    group: ceramic
    mode: '0755'
