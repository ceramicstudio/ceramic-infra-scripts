- name: Install packages
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  loop:
    - curl
    - jq
    - unzip
    - acl

- name: create user
  ansible.builtin.user:
    name: ceramic
    state: present
    shell: /bin/bash
    home: /home/ceramic

- name: Format and mount js-cermaic block device
  block:
    - name: Create persistant data location
      community.general.filesystem:
        fstype: ext4
        dev: "{{ js_ceramic_data_block_path }}"

    - name: Mount persistant data location
      ansible.posix.mount:
        path: "{{ js_ceramic_data_mount_path }}"
        src: "{{ js_ceramic_data_block_path }}"
        fstype: ext4
        state: mounted

    - name: Change ceramic disk owner to ceramic
      ansible.builtin.file:
        path: "{{ js_ceramic_data_mount_path }}"
        state: directory
        owner: ceramic

    - name: Create js_ceramic_data for persistent data storage
      ansible.builtin.file:
        path: "{{ js_ceramic_data_mount_path }}/js_ceramic_data/"
        state: directory
        owner: ceramic

  when: js_ceramic_data_block_path is defined

- name: Format and mount rust-cermaic block device
  block:
    - name: Create persistant data location
      community.general.filesystem:
        fstype: ext4
        dev: "{{ rust_ceramic_data_block_path }}"

    - name: Mount persistant data location
      ansible.posix.mount:
        path: "{{ rust_ceramic_data_mount_path }}"
        src: "{{ rust_ceramic_data_block_path }}"
        fstype: ext4
        state: mounted

    - name: Create rust_ceramic_data for persistent data storage
      ansible.builtin.file:
        path: "{{ rust_ceramic_data_mount_path }}/rust_ceramic_data/"
        state: directory
        owner: ceramic
  when: rust_ceramic_data_block_path is defined

- name: Add CD user
  block:
    - name: Add Ansible user
      ansible.builtin.user:
        name: ansible
        state: present
        shell: /bin/bash
        home: /home/ansible
    - name: Add Ansible user to sudoers
      ansible.builtin.lineinfile:
        path: /etc/sudoers
        line: "ansible ALL=(ALL) NOPASSWD:ALL"
        state: present
    - name: Update user's authorized_keys
      ansible.builtin.authorized_key:
        user: ansible
        key: "{{ ssh_key_cd_pub }}"
  when: ssh_key_cd_pub is defined
