---
# Stop services
- name: Stop js-ceramic-4 node
  ansible.builtin.systemd:
    name: js-ceramic
    state: stopped
  when: inventory_hostname == 'gitcoin-js-ceramic-4.3boxlabs.com'

- name: Stop go-ipfs Docker container
  ansible.builtin.shell:
    cmd: docker-compose down
    chdir: /opt/go-ipfs
  when: inventory_hostname == 'gitcoin-go-ipfs-2.3boxlabs.com'
  register: docker_compose_result

# Ceramic backup
- name: Get current timestamp
  ansible.builtin.set_fact:
    timestamp: "{{ ansible_date_time.iso8601_basic_short }}"
  when: inventory_hostname == 'gitcoin-js-ceramic-4.3boxlabs.com'

- name: Backup Ceramic daemon config file with timestamp
  ansible.builtin.copy:
    src: "{{ data_store_mount_path }}/daemon.config.json"
    dest: "~/ceramic_config_backup_{{ timestamp }}"
    remote_src: yes
  when: inventory_hostname == 'gitcoin-js-ceramic-4.3boxlabs.com'

- name: Get latest common snapshot between gitcoin-js-ceramic-3 and gitcoin-js-ceramic-4
  ansible.builtin.shell:
    cmd: |
      local_snapshots=$(zfs list -H -t snapshot -o name ceramiconepool/data-store)
      remote_snapshots=$(gcloud compute ssh gitcoin-js-ceramic-3 --zone "us-central1-a" --command="zfs list -H -t snapshot -o name ceramiconepool/data-store")
      echo "$local_snapshots" | grep -Fx "$remote_snapshots" | tail -n 1
  when: inventory_hostname == 'gitcoin-js-ceramic-4.3boxlabs.com'
  register: ceramic_common_snapshot
  failed_when: ceramic_common_snapshot.rc != 0 or ceramic_common_snapshot.stdout == ""
  changed_when: false
  become: yes

- name: Create new ZFS snapshot on gitcoin-js-ceramic-3
  ansible.builtin.shell:
    cmd: |
      gcloud compute ssh gitcoin-js-ceramic-3 --zone "us-central1-a" --command="
        snapshot_name=ceramiconepool/data-store@migration_$(date +%Y%m%d_%H%M%S)
        zfs snapshot \$snapshot_name
        echo \$snapshot_name
      "
  when: inventory_hostname == 'gitcoin-js-ceramic-4.3boxlabs.com'
  register: ceramic_new_snapshot
  failed_when: ceramic_new_snapshot.rc != 0
  changed_when: false

- name: Stream incremental ZFS snapshot from gitcoin-js-ceramic-3 to gitcoin-js-ceramic-4
  ansible.builtin.shell:
    cmd: |
      gcloud compute ssh gitcoin-js-ceramic-3 --zone "us-central1-a" --command="zfs send -i {{ ceramic_common_snapshot.stdout }} {{ ceramic_new_snapshot.stdout.strip() }}" | zfs receive -F ceramiconepool/data-store
  when: inventory_hostname == 'gitcoin-js-ceramic-4.3boxlabs.com'
  register: ceramic_zfs_stream_result
  failed_when: ceramic_zfs_stream_result.rc != 0
  become: yes

- name: Restore Ceramic daemon config file
  ansible.builtin.copy:
    src: "~/ceramic_config_backup_{{ timestamp }}"
    dest: "{{ data_store_mount_path }}/daemon.config.json"
    remote_src: yes
  when: inventory_hostname == 'gitcoin-js-ceramic-4.3boxlabs.com'

- name: Create symlink to latest Ceramic config backup
  ansible.builtin.file:
    src: "~/ceramic_config_backup_{{ timestamp }}"
    dest: "~/ceramic_config_backup_latest"
    state: link
  when: inventory_hostname == 'gitcoin-js-ceramic-4.3boxlabs.com'

# IPFS backup
- name: Get current timestamp
  ansible.builtin.set_fact:
    timestamp: "{{ ansible_date_time.iso8601_basic_short }}"
  when: inventory_hostname == 'gitcoin-go-ipfs-2.3boxlabs.com'

- name: Backup IPFS config file with timestamp
  ansible.builtin.copy:
    src: "{{ data_store_mount_path }}/ipfs-data/config"
    dest: "~/ipfs_config_backup_{{ timestamp }}"
    remote_src: yes
  when: inventory_hostname == 'gitcoin-go-ipfs-2.3boxlabs.com'

- name: Get latest common snapshot between gitcoin-go-ipfs-1 and gitcoin-go-ipfs-2
  ansible.builtin.shell:
    cmd: |
      local_snapshots=$(zfs list -H -t snapshot -o name ipfspool/data-store)
      remote_snapshots=$(gcloud compute ssh gitcoin-go-ipfs-1 --zone "us-central1-a" --command="zfs list -H -t snapshot -o name ipfspool/data-store")
      echo "$local_snapshots" | grep -Fx "$remote_snapshots" | tail -n 1
  when: inventory_hostname == 'gitcoin-go-ipfs-2.3boxlabs.com'
  register: common_snapshot
  failed_when: common_snapshot.rc != 0 or common_snapshot.stdout == ""
  changed_when: false
  become: yes

- name: Create new ZFS snapshot on gitcoin-go-ipfs-1
  ansible.builtin.shell:
    cmd: |
      gcloud compute ssh gitcoin-go-ipfs-1 --zone "us-central1-a" --command="
        snapshot_name=ipfspool/data-store@migration_$(date +%Y%m%d_%H%M%S)
        zfs snapshot \$snapshot_name
        echo \$snapshot_name
      "
  when: inventory_hostname == 'gitcoin-go-ipfs-2.3boxlabs.com'
  register: new_snapshot
  failed_when: new_snapshot.rc != 0
  changed_when: false

- name: Stream incremental ZFS snapshot from gitcoin-go-ipfs-1 to gitcoin-go-ipfs-2
  ansible.builtin.shell:
    cmd: |
      gcloud compute ssh gitcoin-go-ipfs-1 --zone "us-central1-a" --command="zfs send -i {{ common_snapshot.stdout }} {{ new_snapshot.stdout.strip() }}" | zfs receive -F ipfspool/data-store
  when: inventory_hostname == 'gitcoin-go-ipfs-2.3boxlabs.com'
  register: zfs_stream_result
  failed_when: zfs_stream_result.rc != 0
  become: yes

- name: Restore IPFS config file
  ansible.builtin.copy:
    src: "~/ipfs_config_backup_{{ timestamp }}"
    dest: "{{ data_store_mount_path }}/ipfs-data/config"
    remote_src: yes
  when: inventory_hostname == 'gitcoin-go-ipfs-2.3boxlabs.com'

- name: Create symlink to latest config backup
  ansible.builtin.file:
    src: "~/ipfs_config_backup_{{ timestamp }}"
    dest: "~/ipfs_config_backup_latest"
    state: link
  when: inventory_hostname == 'gitcoin-go-ipfs-2.3boxlabs.com'

# Start services
- name: Start go-ipfs-2 node
  ansible.builtin.systemd:
    name: go-ipfs
    state: started
  when: inventory_hostname == 'gitcoin-go-ipfs-2.3boxlabs.com'

- name: Start js-ceramic-4 node
  ansible.builtin.systemd:
    name: js-ceramic
    state: started
  when: inventory_hostname == 'gitcoin-js-ceramic-4.3boxlabs.com'
