---
- name: "Install Go and setup go-proxy"
  block:
    - name: "Download and install Go"
      block:
        - name: "Remove existing golang packages"
          ansible.builtin.apt:
            name:
              - golang
              - golang-go
              - golang-src
            state: absent
            purge: yes
            autoremove: yes
          register: golang_remove

        - name: "Clean up old Go directories"
          ansible.builtin.file:
            path: "{{ item }}"
            state: absent
          with_items:
            - "/usr/lib/go"
            - "/usr/lib/go-1.*"
            - "/usr/share/go"

        - name: "Download Go binary"
          ansible.builtin.get_url:
            url: "https://go.dev/dl/go{{ go_version }}.linux-amd64.tar.gz"
            dest: "/tmp/go{{ go_version }}.linux-amd64.tar.gz"
            mode: '0644'

        - name: "Remove any existing Go installation"
          ansible.builtin.file:
            path: "/usr/local/go"
            state: absent

        - name: "Extract Go binary"
          ansible.builtin.unarchive:
            src: "/tmp/go{{ go_version }}.linux-amd64.tar.gz"
            dest: "/usr/local"
            remote_src: yes
            mode: '0755'

        - name: "Verify Go installation"
          ansible.builtin.command: "/usr/local/go/bin/go version"
          register: go_version
          changed_when: false

    - name: "Ensure ceramic user exists"
      ansible.builtin.user:
        name: ceramic
        shell: /bin/bash
        system: yes
        create_home: yes

    - name: "Add Go to PATH"
      ansible.builtin.lineinfile:
        path: "/etc/profile.d/go.sh"
        line: "export PATH=$PATH:/usr/local/go/bin"
        create: yes
        mode: '0644'
      become_user: ceramic
      register: go_path

    - name: "Create Go workspace directory"
      ansible.builtin.file:
        path: "/home/ceramic/go/bin"
        state: directory
        mode: '0755'
        owner: ceramic
        group: ceramic

    - name: Install Git
      ansible.builtin.apt:
        name: git
        state: present
        update_cache: yes

    - name: "Install go-proxy binary"
      ansible.builtin.shell:
        cmd: "go install github.com/3box/go-proxy/cmd/go-proxy@{{ go_proxy_version }}"
      environment:
        GOPATH: "/home/ceramic/go"
        HOME: "/home/ceramic"
        PATH: "/usr/local/bin:/usr/bin:/bin:/snap/bin:/usr/local/go/bin"
      become_user: ceramic
      register: go_proxy_install

    - name: "Copy go-proxy binary to /usr/local/bin"
      ansible.builtin.copy:
        src: "/home/ceramic/go/bin/go-proxy"
        dest: "/usr/local/bin/go-proxy"
        mode: '0755'
        owner: ceramic
        group: ceramic
        remote_src: yes
      register: binary_copy

    - name: "Ensure data store directory exists with correct permissions"
      ansible.builtin.file:
        path: "{{ data_store_mount_path }}"
        state: directory
        owner: ceramic
        group: ceramic
        mode: '0755'

    - name: "Setup go-proxy systemd unit"
      block:
        - name: "Template go-proxy env"
          ansible.builtin.template:
            src: "go-proxy.env.j2"
            dest: "{{ data_store_mount_path }}/go-proxy.env"
            owner: ceramic
            group: ceramic
            mode: '0644'
          register: go_proxy_env

        - name: "Template go-proxy systemd unit"
          ansible.builtin.template:
            src: "go-proxy.service.j2"
            dest: "/etc/systemd/system/go-proxy.service"
            mode: '0644'
          register: go_proxy_systemd_unit

        - name: "Start and enable go-proxy systemd unit"
          ansible.builtin.systemd:
            name: "go-proxy"
            state: "started"
            enabled: true
            daemon_reload: true

    - name: "Restart go-proxy systemd unit if configs changed"
      ansible.builtin.systemd:
        name: "go-proxy"
        state: "restarted"
        enabled: true
        daemon_reload: true
      when: go_proxy_env.changed or go_proxy_systemd_unit.changed or binary_copy.changed
  become: yes
