---
# Stop services
- name: Stop js-ceramic-3 node
  ansible.builtin.systemd:
    name: js-ceramic
    state: stopped
  when: inventory_hostname == 'gitcoin-js-ceramic-3.3boxlabs.com'

- name: Stop go-ipfs Docker container
  ansible.builtin.shell:
    cmd: docker-compose down
    chdir: /opt/go-ipfs
  when: inventory_hostname == 'gitcoin-go-ipfs-1.3boxlabs.com'
  register: docker_compose_result

# PostgreSQL migration
- name: Stream PostgreSQL schema from hirenodes_pg to GCP SQL DB
  ansible.builtin.shell:
    cmd: |
      ssh -i ~/.ssh/id_hirenodes root@{{ hirenodes_pg_host }} \
      "su - postgres -c \"PGPASSWORD='{{ hirenodes_pg_password }}' pg_dump -v -h localhost -U {{ hirenodes_pg_user }} -d {{ hirenodes_pg_database }} --clean --if-exists --no-owner --no-acl --schema-only | gzip -c\"" | \
      gunzip | PGPASSWORD='{{ ceramic_indexing_db_password }}' psql -v ON_ERROR_STOP=1 -h {{ ceramic_indexing_db_host }} -U {{ ceramic_indexing_db_user }} -d {{ ceramic_indexing_db_name }} 2>&1
  delegate_to: gitcoin-js-ceramic-3.3boxlabs.com
  environment:
    PGSSLMODE: require
  register: pg_schema_migration_result
  failed_when: pg_schema_migration_result.rc != 0
  when: inventory_hostname == 'gitcoin-js-ceramic-3.3boxlabs.com'
  become: no
#  no_log: true

- name: Stream PostgreSQL data from hirenodes_pg to GCP SQL DB with compression and monitoring
  ansible.builtin.shell:
    cmd: |
      set -o pipefail
      ssh -i ~/.ssh/id_hirenodes root@{{ hirenodes_pg_host }} \
      "su - postgres -c \"PGPASSWORD='{{ hirenodes_pg_password }}' pg_dump -v -h localhost -U {{ hirenodes_pg_user }} -d {{ hirenodes_pg_database }} --data-only --no-owner --no-acl | gzip -c\"" | \
      gunzip | PGPASSWORD='{{ ceramic_indexing_db_password }}' psql -v ON_ERROR_STOP=1 -h {{ ceramic_indexing_db_host }} -U {{ ceramic_indexing_db_user }} -d {{ ceramic_indexing_db_name }} 2>&1
  args:
    executable: /bin/bash
  delegate_to: gitcoin-js-ceramic-3.3boxlabs.com
  environment:
    PGSSLMODE: require
  register: pg_data_migration_result
  failed_when: pg_data_migration_result.rc != 0
  when: inventory_hostname == 'gitcoin-js-ceramic-3.3boxlabs.com'
  become: no
  # no_log: true

# Ceramic migration
- name: Stream Ceramic statestore from hirenodes_ceramic to gitcoin-js-ceramic-3
  ansible.builtin.synchronize:
    src: "{{ ceramic_statestore_path }}/"
    dest: "{{ data_store_mount_path }}/"
    mode: pull
    delete: yes
    rsync_opts:
      - "--compress"
      - "--archive"
  delegate_to: gitcoin-js-ceramic-3.3boxlabs.com
  vars:
    ansible_ssh_private_key: "{{ hirenodes_ceramic_ssh_key }}"

# IPFS migration
- name: Get current timestamp
  ansible.builtin.set_fact:
    timestamp: "{{ ansible_date_time.iso8601_basic_short }}"
  when: inventory_hostname == 'gitcoin-go-ipfs-1.3boxlabs.com'

- name: Backup IPFS config file with timestamp
  ansible.builtin.copy:
    src: "{{ data_store_mount_path }}/ipfs-data/config"
    dest: "~/ipfs_config_backup_{{ timestamp }}"
    remote_src: yes
  when: inventory_hostname == 'gitcoin-go-ipfs-1.3boxlabs.com'

- name: Stream ZFS snapshot from hirenodes_ipfs to gitcoin-go-ipfs-1
  ansible.builtin.shell:
    cmd: zfs send -i ipfs/ipfs@initial {{ remote_latest_snapshot.stdout }}
  delegate_to: hirenodes_ipfs
  register: zfs_send_output
  when: inventory_hostname == 'gitcoin-go-ipfs-1.3boxlabs.com'

- name: Apply ZFS snapshot on gitcoin-go-ipfs-1
  ansible.builtin.shell:
    cmd: zfs receive -F ipfspool/data-store
  args:
    stdin: "{{ zfs_send_output.stdout }}"
  when: inventory_hostname == 'gitcoin-go-ipfs-1.3boxlabs.com'
  register: zfs_receive_result
  failed_when: zfs_receive_result.rc != 0

- name: Restore IPFS config file
  ansible.builtin.copy:
    src: "/home/{{ ansible_user }}/ipfs_config_backup_{{ timestamp }}"
    dest: "{{ data_store_mount_path }}/ipfs-data/config"
    remote_src: yes
  when: inventory_hostname == 'gitcoin-go-ipfs-1.3boxlabs.com'

- name: Create symlink to latest config backup
  ansible.builtin.file:
    src: "/home/{{ ansible_user }}/ipfs_config_backup_{{ timestamp }}"
    dest: "/home/{{ ansible_user }}/ipfs_config_backup_latest"
    state: link
  when: inventory_hostname == 'gitcoin-go-ipfs-1.3boxlabs.com'

# Start services
- name: Start go-ipfs-1 node
  ansible.builtin.systemd:
    name: go-ipfs
    state: started
  when: inventory_hostname == 'gitcoin-go-ipfs-1.3boxlabs.com'

- name: Start js-ceramic-3 node
  ansible.builtin.systemd:
    name: js-ceramic
    state: started
  when: inventory_hostname == 'gitcoin-js-ceramic-3.3boxlabs.com'
